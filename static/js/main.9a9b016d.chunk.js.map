{"version":3,"sources":["img/diary.jpg","index.js"],"names":["module","exports","App","props","addEvent","newArray","state","events","push","id","length","time","title","location","description","setState","handleInputChange","inputName","value","nextValue","handleDelete","eventId","filter","e","toggleModal","modal","date","Date","Fragment","md","className","this","toLocaleDateString","map","event","Event","key","onDelete","xl","color","rounded","onClick","src","Diary","alt","isOpen","toggle","titleClass","name","label","icon","hint","group","type","getValue","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a9b016d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/diary.ee9aa13e.jpg\";","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport { MDBBtn, MDBInput, MDBModal, MDBModalBody,  MDBModalHeader, MDBModalFooter, MDBIcon, MDBBadge, MDBContainer, MDBRow, MDBCol} from \"mdbreact\";\nimport \"./index.css\";\nimport Diary from \"./img/diary.jpg\"  ;\n\n\n\n\n\nclass App extends Component {\n      constructor(props) {\n      super(props);\n      this.state = {\n        date: new Date(),\n        modal: false,\n        events: [\n        {\n            id: 1,\n            time: \"10:00\",\n            title: \"Breakfast with Simon\",\n            location: \"Lounge Caffe\",\n            description: \"Discuss Q3 targets\"\n        },\n        {\n            id: 2,\n            time: \"10:30\",\n            title: \"Daily Standup Meeting (recurring)\",\n            location: \"Warsaw Spire Office\"\n        },\n        { id: 3, time: \"11:00\", title: \"Call with HRs\" },\n        {\n            id: 4,\n            time: \"12:00\",\n            title: \"Lunch with Timmoty\",\n            location: \"Canteen\",\n            description:\n            \"Open next funding\"\n        }\n        ]\n    };\n    }\n    addEvent = () => {\n    var newArray = [...this.state.events];\n    newArray.push({\n        id: newArray.length ? newArray[newArray.length - 1].id + 1 : 1,\n        time: this.state.time,\n        title: this.state.title,\n        location: this.state.location,\n        description: this.state.description\n    });\n    this.setState({ events: newArray });\n    this.setState({\n        time: \"\",\n        title: \"\",\n        location: \"\",\n        description: \"\"\n    });\n    };\n    handleInputChange = inputName => value => {\n    const nextValue = value;\n    this.setState({\n        [inputName]: nextValue\n    });\n    };\n    handleDelete = eventId => {\n    const events = this.state.events.filter(e => e.id !== eventId);\n    this.setState({ events });\n    };\n    toggleModal = () => {\n    this.setState({\n        modal: !this.state.modal\n    });\n    };\n\n\n\n    render() {\n    return (\n        <React.Fragment>\n        <MDBContainer>\n            <MDBRow>\n            <MDBCol md=\"8\" >\n                <h2 className=\"text-uppercase my-3\">Today: {this.state.date.toLocaleDateString()} </h2>\n\n                <div id=\"events\">\n                {this.state.events.map(event => (\n                    <Event\n                    key={event.id}\n                    id={event.id}\n                    time={event.time}\n                    title={event.title}\n                    location={event.location}\n                    description={event.description}\n                    onDelete={this.handleDelete}\n                    />\n                ))}\n                </div>\n                <MDBRow className=\"mb-4\">\n                <MDBCol xl=\"3\" md=\"6\" className=\"mx-auto text-center\">\n                    <MDBBtn color=\"elegant\" rounded onClick={this.toggleModal}>\n                    Add Event\n                    </MDBBtn>\n                </MDBCol>\n                </MDBRow>\n            </MDBCol>\n            <MDBCol md=\"4\" className=\"mb-r\">\n            \n\n                <h4 className=\"my-3\">\n                You have{\" \"}\n                <b>{this.state.events.length} events </b> today.\n                </h4>\n\n                <img src={Diary} rounded className=\"img-fluid\" alt=\"diaryimage\"/>\n\n            </MDBCol>\n\n            </MDBRow>\n        </MDBContainer>\n        <MDBModal isOpen={this.state.modal} toggle={this.toggleModal}>\n            <MDBModalHeader\n            className=\"text-center\"\n            titleClass=\"w-100 font-weight-bold\"\n            toggle={this.toggleModal}\n            >\n            Add new event\n            </MDBModalHeader>\n            <MDBModalBody>\n                <form className=\"mx-3 grey-text\">\n                    <MDBInput\n                      name=\"time\"\n                      label=\"Time\"\n                      icon=\"clock\"\n                      hint=\"time\"\n                      group\n                      type=\"text\"\n                      getValue={this.handleInputChange(\"time\")}\n                    />\n                    <MDBInput\n                      name=\"title\"\n                      label=\"Title\"\n                      icon=\"edit\"\n                      hint=\"Briefing\"\n                      group\n                      type=\"text\"\n                      getValue={this.handleInputChange(\"title\")}\n                    />\n                    <MDBInput\n                      name=\"location\"\n                      label=\"Location (optional)\"\n                      icon=\"map\"\n                      group\n                      type=\"text\"\n                      getValue={this.handleInputChange(\"location\")}\n                    />\n                    <MDBInput\n                      name=\"description\"\n                      label=\"Description (optional)\"\n                      icon=\"sticky-note\"\n                      group\n                      type=\"textarea\"\n                      getValue={this.handleInputChange(\"description\")}\n                    />\n                  </form>\n            </MDBModalBody>\n            <MDBModalFooter className=\"justify-content-center\">\n            <MDBBtn\n                color=\"elegant\"\n                onClick={() => {\n                this.toggleModal();\n                this.addEvent();\n                }}\n            >\n                Add\n            </MDBBtn>\n            </MDBModalFooter>\n        </MDBModal>\n        </React.Fragment>\n    );\n    }\n}\nclass Event extends Component {\n    render() {\n    return (\n        <React.Fragment>\n        <div className=\"media mt-1\">\n            <h3 className=\"h3-responsive font-weight-bold mr-3\">\n            {this.props.time}\n            </h3>\n            <div className=\"media-body mb-3 mb-lg-3\">\n            <MDBBadge\n                color=\"danger\"\n                className=\"ml-2 float-right\"\n                onClick={() => this.props.onDelete(this.props.id)}\n            >\n                -\n            </MDBBadge>\n            <h6 className=\"mt-0 font-weight-bold\">{this.props.title} </h6>{\" \"}\n            <hr className=\"hr-bold my-2\" />\n            {this.props.location && (\n                <React.Fragment>\n                <p className=\"font-smaller mb-0\">\n                    <MDBIcon icon=\"location-arrow\" /> {this.props.location}\n                </p>\n                </React.Fragment>\n            )}\n            </div>\n        </div>\n        {this.props.description && (\n            <p className=\"p-2 mb-4  blue-grey lighten-5 lighten-5\">\n            {this.props.description}\n            </p>\n        )}\n        </React.Fragment>\n    );\n    }\n}\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}